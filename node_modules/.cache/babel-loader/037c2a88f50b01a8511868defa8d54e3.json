{"ast":null,"code":"import { useCallback, useReducer } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      status: \"pending\",\n      data: null,\n      error: null\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      status: \"completed\",\n      data: action.responseData,\n      error: null\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      status: \"completed\",\n      data: null,\n      error: action.errorMessage\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction) {\n  let startWithPending = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null\n  });\n  const sendRequest = useCallback(async function (requestData) {\n    dispatch({\n      type: \"SEND\"\n    });\n\n    try {\n      const responseData = await requestFunction(requestData);\n      dispatch({\n        type: \"SUCCESS\",\n        responseData\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        errorMessage: error.message || \"Something went wrong\"\n      });\n    }\n  }, [requestFunction]);\n  return {\n    sendRequest,\n    ...httpState\n  };\n}\n\nexport default useHttp; //   const fetchCar = useCallback(async () => {\n//     try {\n//       const response = await fetch(\n//         \"https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForManufacturerAndYear/988?year=2014&format=json\"\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"sth wrong\");\n//       }\n//       const data = await response.json();\n//       const transformedData = data.Results;\n//       setVehicles(transformedData);\n//     } catch (error) {\n//       console.log(error.message);\n//     }\n//   }, []);\n//   useEffect(() => {\n//     fetchCar();\n//   }, [fetchCar]);","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/hooks/use-http.js"],"names":["useCallback","useReducer","httpReducer","state","action","type","status","data","error","responseData","errorMessage","useHttp","requestFunction","startWithPending","httpState","dispatch","sendRequest","requestData","message"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC1B,WAAO;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,IAAI,EAAE,IAFD;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,WAAO;AACLC,MAAAA,MAAM,EAAE,WADH;AAELC,MAAAA,IAAI,EAAEH,MAAM,CAACK,YAFR;AAGLD,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AACLC,MAAAA,MAAM,EAAE,WADH;AAELC,MAAAA,IAAI,EAAE,IAFD;AAGLC,MAAAA,KAAK,EAAEJ,MAAM,CAACM;AAHT,KAAP;AAKD;;AACD,SAAOP,KAAP;AACD;;AAED,SAASQ,OAAT,CAAiBC,eAAjB,EAA4D;AAAA,MAA1BC,gBAA0B,uEAAP,KAAO;AAC1D,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,UAAU,CAACC,WAAD,EAAc;AACpDI,IAAAA,MAAM,EAAEO,gBAAgB,GAAG,SAAH,GAAe,IADa;AAEpDN,IAAAA,IAAI,EAAE,IAF8C;AAGpDC,IAAAA,KAAK,EAAE;AAH6C,GAAd,CAAxC;AAKA,QAAMQ,WAAW,GAAGhB,WAAW,CAC7B,gBAAgBiB,WAAhB,EAA6B;AAC3BF,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMI,YAAY,GAAG,MAAMG,eAAe,CAACK,WAAD,CAA1C;AACAF,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAE,SAAR;AAAmBI,QAAAA;AAAnB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOD,KAAP,EAAc;AACdO,MAAAA,QAAQ,CAAC;AACPV,QAAAA,IAAI,EAAE,OADC;AAEPK,QAAAA,YAAY,EAAEF,KAAK,CAACU,OAAN,IAAiB;AAFxB,OAAD,CAAR;AAID;AACF,GAZ4B,EAa7B,CAACN,eAAD,CAb6B,CAA/B;AAeA,SAAO;AACLI,IAAAA,WADK;AAEL,OAAGF;AAFE,GAAP;AAID;;AACD,eAAeH,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useCallback, useReducer } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      status: \"pending\",\r\n      data: null,\r\n      error: null,\r\n    };\r\n  }\r\n  if (action.type === \"SUCCESS\") {\r\n    return {\r\n      status: \"completed\",\r\n      data: action.responseData,\r\n      error: null,\r\n    };\r\n  }\r\n  if (action.type === \"ERROR\") {\r\n    return {\r\n      status: \"completed\",\r\n      data: null,\r\n      error: action.errorMessage,\r\n    };\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: \"SEND\" });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: \"SUCCESS\", responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          errorMessage: error.message || \"Something went wrong\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\nexport default useHttp;\r\n\r\n//   const fetchCar = useCallback(async () => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         \"https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForManufacturerAndYear/988?year=2014&format=json\"\r\n//       );\r\n//       if (!response.ok) {\r\n//         throw new Error(\"sth wrong\");\r\n//       }\r\n//       const data = await response.json();\r\n//       const transformedData = data.Results;\r\n//       setVehicles(transformedData);\r\n//     } catch (error) {\r\n//       console.log(error.message);\r\n//     }\r\n//   }, []);\r\n//   useEffect(() => {\r\n//     fetchCar();\r\n//   }, [fetchCar]);\r\n"]},"metadata":{},"sourceType":"module"}