{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\components\\\\Database\\\\FactorySearch.js\";\nimport React, { useState, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { fetchFactoryForDatabase } from \"../../lib/api\";\nimport styles from \"./FactorySearch.module.css\";\n\nconst FactorySearch = () => {\n  const [getEquipmentType, setGetEquipmentType] = useState(\"\");\n  const [getReportType, setGetReportType] = useState(\"\");\n  const [getYear, setGetYear] = useState(\"\");\n  const [specificCountryList, setSpecificCountryList] = useState(false);\n  const {\n    sendRequest,\n    status,\n    data,\n    error\n  } = useHttp(fetchFactoryForDatabase);\n\n  const getEquipmentTypeHandler = e => {\n    e.preventDefault();\n    setGetEquipmentType(e.target.value);\n  };\n\n  const getReportTypeHandler = e => {\n    e.preventDefault();\n    setGetReportType(e.target.value);\n  };\n\n  const getYearHandler = e => {\n    e.preventDefault();\n    setGetYear(e.target.value);\n  };\n\n  const submitFactoryHandler = e => {\n    e.preventDefault();\n    sendRequest({\n      equipmentType: getEquipmentType,\n      reportType: getReportType,\n      year: getYear\n    });\n  };\n\n  let factoryByCountry = [];\n\n  const specificCountryHandler = e => {\n    let selectedCountry = e.target.value;\n    let showFactoryByCountry = data.Results.filter(datacountry => {\n      if (datacountry.Country.toLowerCase() === selectedCountry) {\n        factoryByCountry.push(datacountry);\n      }\n    }); // content = factoryByCountry.map((data) => {\n    //   return (\n    //     <>\n    //       <div className=\"focused\">\n    //         <span>{data.Country} </span>\n    //         <span>{data.City}</span>\n    //       </div>\n    //     </>\n    //   );\n    // });\n\n    setSpecificCountryList(true);\n  };\n\n  let mapCountries = data === null || data === void 0 ? void 0 : data.Results.map(data => {\n    return data.Country.toLowerCase();\n  });\n  let uniqueCountriesList = [...new Set(mapCountries)];\n  let optionMapList = uniqueCountriesList.map(country => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, country);\n  });\n  console.log(optionMapList);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"No data\"); //   if (status === \"completed\" && data) {\n  //     content = data.Results.map((data) => {\n  //       return (\n  //         <>\n  //           <div className=\"focused\">\n  //             <span>{data.Country} </span>\n  //             <span>{data.City}</span>\n  //           </div>\n  //         </>\n  //       );\n  //     });\n  //   }\n\n  useEffect(() => {\n    if (specificCountryList) {\n      content = factoryByCountry.map(data => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"focused\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, data.Country, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, data.City)));\n      });\n    }\n  }, [data, content, specificCountryList]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, status), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitFactoryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Choose factory:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: getEquipmentTypeHandler,\n    id: \"equipment\",\n    name: \"equipment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Select Equipment\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Tires\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Brake Hoses\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"13\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Glazing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Retread\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: getReportTypeHandler,\n    id: \"cars\",\n    name: \"cars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Select Report\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"New\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"updated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Updated\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Closed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: getYearHandler,\n    id: \"years\",\n    name: \"years\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Select Year\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2012\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"2012\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2013\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"2013\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2014\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"2014\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2015\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"2015\")), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Get a factory\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitFactoryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Factory\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \" \", data && `Amount of factories: ${data.Count}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \" \", data && /*#__PURE__*/React.createElement(\"select\", {\n    onChange: specificCountryHandler,\n    id: \"country\",\n    name: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Countries\"), optionMapList)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nexport default FactorySearch;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/components/Database/FactorySearch.js"],"names":["React","useState","useEffect","useHttp","fetchFactoryForDatabase","styles","FactorySearch","getEquipmentType","setGetEquipmentType","getReportType","setGetReportType","getYear","setGetYear","specificCountryList","setSpecificCountryList","sendRequest","status","data","error","getEquipmentTypeHandler","e","preventDefault","target","value","getReportTypeHandler","getYearHandler","submitFactoryHandler","equipmentType","reportType","year","factoryByCountry","specificCountryHandler","selectedCountry","showFactoryByCountry","Results","filter","datacountry","Country","toLowerCase","push","mapCountries","map","uniqueCountriesList","Set","optionMapList","country","console","log","content","City","Count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { fetchFactoryForDatabase } from \"../../lib/api\";\r\nimport styles from \"./FactorySearch.module.css\";\r\n\r\nconst FactorySearch = () => {\r\n  const [getEquipmentType, setGetEquipmentType] = useState(\"\");\r\n  const [getReportType, setGetReportType] = useState(\"\");\r\n  const [getYear, setGetYear] = useState(\"\");\r\n  const [specificCountryList, setSpecificCountryList] = useState(false);\r\n  const { sendRequest, status, data, error } = useHttp(fetchFactoryForDatabase);\r\n\r\n  const getEquipmentTypeHandler = (e) => {\r\n    e.preventDefault();\r\n    setGetEquipmentType(e.target.value);\r\n  };\r\n  const getReportTypeHandler = (e) => {\r\n    e.preventDefault();\r\n    setGetReportType(e.target.value);\r\n  };\r\n  const getYearHandler = (e) => {\r\n    e.preventDefault();\r\n    setGetYear(e.target.value);\r\n  };\r\n\r\n  const submitFactoryHandler = (e) => {\r\n    e.preventDefault();\r\n    sendRequest({\r\n      equipmentType: getEquipmentType,\r\n      reportType: getReportType,\r\n      year: getYear,\r\n    });\r\n  };\r\n\r\n  let factoryByCountry = [];\r\n  const specificCountryHandler = (e) => {\r\n    let selectedCountry = e.target.value;\r\n    let showFactoryByCountry = data.Results.filter((datacountry) => {\r\n      if (datacountry.Country.toLowerCase() === selectedCountry) {\r\n        factoryByCountry.push(datacountry);\r\n      }\r\n    });\r\n    // content = factoryByCountry.map((data) => {\r\n    //   return (\r\n    //     <>\r\n    //       <div className=\"focused\">\r\n    //         <span>{data.Country} </span>\r\n    //         <span>{data.City}</span>\r\n    //       </div>\r\n    //     </>\r\n    //   );\r\n    // });\r\n    setSpecificCountryList(true);\r\n  };\r\n\r\n  let mapCountries = data?.Results.map((data) => {\r\n    return data.Country.toLowerCase();\r\n  });\r\n\r\n  let uniqueCountriesList = [...new Set(mapCountries)];\r\n\r\n  let optionMapList = uniqueCountriesList.map((country) => {\r\n    return <option value={country}>{country}</option>;\r\n  });\r\n\r\n  console.log(optionMapList);\r\n  let content = <p>No data</p>;\r\n  //   if (status === \"completed\" && data) {\r\n  //     content = data.Results.map((data) => {\r\n  //       return (\r\n  //         <>\r\n  //           <div className=\"focused\">\r\n  //             <span>{data.Country} </span>\r\n  //             <span>{data.City}</span>\r\n  //           </div>\r\n  //         </>\r\n  //       );\r\n  //     });\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    if (specificCountryList) {\r\n      content = factoryByCountry.map((data) => {\r\n        return (\r\n          <>\r\n            <div className=\"focused\">\r\n              <span>{data.Country} </span>\r\n              <span>{data.City}</span>\r\n            </div>\r\n          </>\r\n        );\r\n      });\r\n    }\r\n  }, [data, content, specificCountryList]);\r\n  return (\r\n    <>\r\n      <div>{status}</div>\r\n      <form onSubmit={submitFactoryHandler}>\r\n        <label htmlFor=\"cars\">Choose factory:</label>\r\n        <select\r\n          onChange={getEquipmentTypeHandler}\r\n          id=\"equipment\"\r\n          name=\"equipment\"\r\n        >\r\n          <option value=\"\">Select Equipment</option>\r\n          <option value=\"1\">Tires</option>\r\n          <option value=\"3\">Brake Hoses</option>\r\n          <option value=\"13\">Glazing</option>\r\n          <option value=\"16\">Retread</option>\r\n        </select>\r\n        <select onChange={getReportTypeHandler} id=\"cars\" name=\"cars\">\r\n          <option value=\"\">Select Report</option>\r\n          <option value=\"new\">New</option>\r\n          <option value=\"updated\">Updated</option>\r\n          <option value=\"closed\">Closed</option>\r\n          <option value=\"all\">All</option>\r\n        </select>\r\n        <select onChange={getYearHandler} id=\"years\" name=\"years\">\r\n          <option value=\"\">Select Year</option>\r\n          <option value=\"2012\">2012</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2015\">2015</option>\r\n        </select>\r\n        <button>Get a factory</button>\r\n      </form>\r\n      <button onClick={submitFactoryHandler}>Factory</button>\r\n      <div> {data && `Amount of factories: ${data.Count}`}</div>\r\n      <div>\r\n        {\" \"}\r\n        {data && (\r\n          <select onChange={specificCountryHandler} id=\"country\" name=\"country\">\r\n            <option value=\"\">Countries</option>\r\n            {optionMapList}\r\n          </select>\r\n        )}\r\n      </div>\r\n      <div>{content}</div>\r\n    </>\r\n  );\r\n};\r\nexport default FactorySearch;\r\n"]},"metadata":{},"sourceType":"module"}