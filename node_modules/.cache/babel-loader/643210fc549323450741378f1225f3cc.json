{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\components\\\\Database\\\\FactorySearch.js\";\nimport React, { useState, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { fetchFactoryForDatabase } from \"../../lib/api\";\nimport styles from \"./FactorySearch.module.css\";\n\nconst sortList = (items, ascending) => {\n  return items.sort((itemA, itemB) => {\n    if (ascending) {\n      return itemA.Name > itemB.Name ? 1 : -1;\n    } else {\n      return itemA.Name < itemB.Name ? 1 : -1;\n    }\n  });\n};\n\nconst FactorySearch = () => {\n  const [getEquipmentType, setGetEquipmentType] = useState(\"\");\n  const [getReportType, setGetReportType] = useState(\"\");\n  const [getYear, setGetYear] = useState(\"\");\n  const [specificCountryList, setSpecificCountryList] = useState([]);\n  const {\n    sendRequest,\n    status,\n    data,\n    error\n  } = useHttp(fetchFactoryForDatabase);\n\n  const getEquipmentTypeHandler = e => {\n    e.preventDefault();\n    setGetEquipmentType(e.target.value);\n  };\n\n  const getReportTypeHandler = e => {\n    e.preventDefault();\n    setGetReportType(e.target.value);\n  };\n\n  const getYearHandler = e => {\n    e.preventDefault();\n    setGetYear(e.target.value);\n  };\n\n  const submitFactoryHandler = e => {\n    e.preventDefault();\n    sendRequest({\n      equipmentType: getEquipmentType,\n      reportType: getReportType,\n      year: getYear\n    });\n  };\n\n  let showFactoryByCountry = [];\n\n  const specificCountryHandler = e => {\n    let selectedCountry = e.target.value;\n    showFactoryByCountry = data.Results.filter(datacountry => {\n      if (datacountry.Country.toLowerCase() === selectedCountry) {\n        showFactoryByCountry.push(datacountry);\n        setSpecificCountryList(showFactoryByCountry);\n      }\n\n      if (selectedCountry === \"all\") {\n        setSpecificCountryList(data.Results);\n      }\n    });\n  };\n\n  let mapCountries = data === null || data === void 0 ? void 0 : data.Results.map(data => {\n    return data.Country.toLowerCase();\n  });\n  let uniqueCountriesList = [...new Set(mapCountries)];\n  let optionMapList = uniqueCountriesList.map(country => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, country);\n  });\n  console.log(optionMapList, specificCountryList);\n  const sortedList = sortList(specificCountryList, ascending);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"No data\");\n\n  if (status === \"completed\" && data) {\n    content = data.Results.map(data => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"focused\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, data.Name), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, data.Country, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, data.City));\n    });\n  }\n\n  if (specificCountryList.length > 0) {\n    content = sortedList.map(data => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"focused\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, data.Name), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, data.Country, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, data.City));\n    });\n  }\n\n  useEffect(() => {}, [data, content]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, status), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitFactoryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Choose factory:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: getEquipmentTypeHandler,\n    id: \"equipment\",\n    name: \"equipment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Select Equipment\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Tires\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Brake Hoses\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"13\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Glazing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Retread\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: getReportTypeHandler,\n    id: \"cars\",\n    name: \"cars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Select Report\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"New\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"updated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Updated\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Closed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: getYearHandler,\n    id: \"years\",\n    name: \"years\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Select Year\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2012\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"2012\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2013\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"2013\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2014\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"2014\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2015\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"2015\")), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Get a factory\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitFactoryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Factory\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \" \", data && `Amount of factories: ${data.Count}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \" \", data && /*#__PURE__*/React.createElement(\"select\", {\n    onChange: specificCountryHandler,\n    id: \"country\",\n    name: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"All countries\"), optionMapList)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nexport default FactorySearch;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/components/Database/FactorySearch.js"],"names":["React","useState","useEffect","useHttp","fetchFactoryForDatabase","styles","sortList","items","ascending","sort","itemA","itemB","Name","FactorySearch","getEquipmentType","setGetEquipmentType","getReportType","setGetReportType","getYear","setGetYear","specificCountryList","setSpecificCountryList","sendRequest","status","data","error","getEquipmentTypeHandler","e","preventDefault","target","value","getReportTypeHandler","getYearHandler","submitFactoryHandler","equipmentType","reportType","year","showFactoryByCountry","specificCountryHandler","selectedCountry","Results","filter","datacountry","Country","toLowerCase","push","mapCountries","map","uniqueCountriesList","Set","optionMapList","country","console","log","sortedList","content","City","length","Count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { fetchFactoryForDatabase } from \"../../lib/api\";\r\nimport styles from \"./FactorySearch.module.css\";\r\n\r\nconst sortList = (items, ascending) => {\r\n  return items.sort((itemA, itemB) => {\r\n    if (ascending) {\r\n      return itemA.Name > itemB.Name ? 1 : -1;\r\n    } else {\r\n      return itemA.Name < itemB.Name ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst FactorySearch = () => {\r\n  const [getEquipmentType, setGetEquipmentType] = useState(\"\");\r\n  const [getReportType, setGetReportType] = useState(\"\");\r\n  const [getYear, setGetYear] = useState(\"\");\r\n  const [specificCountryList, setSpecificCountryList] = useState([]);\r\n  const { sendRequest, status, data, error } = useHttp(fetchFactoryForDatabase);\r\n\r\n  const getEquipmentTypeHandler = (e) => {\r\n    e.preventDefault();\r\n    setGetEquipmentType(e.target.value);\r\n  };\r\n  const getReportTypeHandler = (e) => {\r\n    e.preventDefault();\r\n    setGetReportType(e.target.value);\r\n  };\r\n  const getYearHandler = (e) => {\r\n    e.preventDefault();\r\n    setGetYear(e.target.value);\r\n  };\r\n\r\n  const submitFactoryHandler = (e) => {\r\n    e.preventDefault();\r\n    sendRequest({\r\n      equipmentType: getEquipmentType,\r\n      reportType: getReportType,\r\n      year: getYear,\r\n    });\r\n  };\r\n  let showFactoryByCountry = [];\r\n  const specificCountryHandler = (e) => {\r\n    let selectedCountry = e.target.value;\r\n    showFactoryByCountry = data.Results.filter((datacountry) => {\r\n      if (datacountry.Country.toLowerCase() === selectedCountry) {\r\n        showFactoryByCountry.push(datacountry);\r\n        setSpecificCountryList(showFactoryByCountry);\r\n      }\r\n      if (selectedCountry === \"all\") {\r\n        setSpecificCountryList(data.Results);\r\n      }\r\n    });\r\n  };\r\n\r\n  let mapCountries = data?.Results.map((data) => {\r\n    return data.Country.toLowerCase();\r\n  });\r\n\r\n  let uniqueCountriesList = [...new Set(mapCountries)];\r\n\r\n  let optionMapList = uniqueCountriesList.map((country) => {\r\n    return <option value={country}>{country}</option>;\r\n  });\r\n\r\n  console.log(optionMapList, specificCountryList);\r\n  const sortedList = sortList(specificCountryList, ascending);\r\n  let content = <p>No data</p>;\r\n  if (status === \"completed\" && data) {\r\n    content = data.Results.map((data) => {\r\n      return (\r\n        <>\r\n          <div className=\"focused\">{data.Name}</div>\r\n          <span>{data.Country} </span>\r\n          <span>{data.City}</span>\r\n        </>\r\n      );\r\n    });\r\n  }\r\n  if (specificCountryList.length > 0) {\r\n    content = sortedList.map((data) => {\r\n      return (\r\n        <>\r\n          <div className=\"focused\">{data.Name}</div>\r\n          <span>{data.Country} </span>\r\n          <span>{data.City}</span>\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {}, [data, content]);\r\n  return (\r\n    <>\r\n      <div>{status}</div>\r\n      <form onSubmit={submitFactoryHandler}>\r\n        <label htmlFor=\"cars\">Choose factory:</label>\r\n        <select\r\n          onChange={getEquipmentTypeHandler}\r\n          id=\"equipment\"\r\n          name=\"equipment\"\r\n        >\r\n          <option value=\"\">Select Equipment</option>\r\n          <option value=\"1\">Tires</option>\r\n          <option value=\"3\">Brake Hoses</option>\r\n          <option value=\"13\">Glazing</option>\r\n          <option value=\"16\">Retread</option>\r\n        </select>\r\n        <select onChange={getReportTypeHandler} id=\"cars\" name=\"cars\">\r\n          <option value=\"\">Select Report</option>\r\n          <option value=\"new\">New</option>\r\n          <option value=\"updated\">Updated</option>\r\n          <option value=\"closed\">Closed</option>\r\n          <option value=\"all\">All</option>\r\n        </select>\r\n        <select onChange={getYearHandler} id=\"years\" name=\"years\">\r\n          <option value=\"\">Select Year</option>\r\n          <option value=\"2012\">2012</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2015\">2015</option>\r\n        </select>\r\n        <button>Get a factory</button>\r\n      </form>\r\n      <button onClick={submitFactoryHandler}>Factory</button>\r\n      <div> {data && `Amount of factories: ${data.Count}`}</div>\r\n      <div>\r\n        {\" \"}\r\n        {data && (\r\n          <select onChange={specificCountryHandler} id=\"country\" name=\"country\">\r\n            <option value=\"all\">All countries</option>\r\n            {optionMapList}\r\n          </select>\r\n        )}\r\n      </div>\r\n      <div>{content}</div>\r\n    </>\r\n  );\r\n};\r\nexport default FactorySearch;\r\n"]},"metadata":{},"sourceType":"module"}