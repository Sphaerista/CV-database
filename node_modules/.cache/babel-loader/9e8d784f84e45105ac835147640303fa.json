{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\components\\\\Database\\\\ViewFactory.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport styles from \"./ViewFactory.module.css\";\nimport useHttp from \"./../../hooks/use-http\";\nimport { addToFavs, getDataInFavs } from \"../../lib/api\";\nimport { useContext } from \"react/cjs/react.development\";\nimport AuthContext from \"../../hooks/auth-context\";\n\nconst ViewFactory = props => {\n  var _authCtx$email;\n\n  const [isAddedToFavs, setIsAddedToFavs] = useState(false);\n  const [alreadyExistsInFavs, setAlreadyExistsInFavs] = useState(false);\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addToFavs);\n  const authCtx = useContext(AuthContext);\n  const userName = (_authCtx$email = authCtx.email) === null || _authCtx$email === void 0 ? void 0 : _authCtx$email.replace(\"@\", \"_\").split(\".\").join(\"\"); ///// get-keys-to-check-if-it-is-already-added /////\n\n  const {\n    sendRequest: getKeys,\n    status: getStatus,\n    error: getError,\n    data: loadedFavs\n  } = useHttp(getDataInFavs, true);\n  useEffect(() => {\n    if (props.dataViewFactory) {\n      getKeys({\n        username: userName,\n        category: \"factory\"\n      });\n      console.log(\"sent\", getStatus);\n    }\n  }, [getKeys]);\n  let getDOTCodes = [];\n\n  if (getStatus === \"pending\") {\n    console.log(\"pending\");\n  }\n\n  if (getError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, getError);\n  }\n\n  if (getStatus === \"completed\" && loadedFavs) {\n    getDOTCodes = Object.keys(loadedFavs);\n  }\n\n  if (getStatus === \"completed\" && !loadedFavs) {\n    return null;\n  }\n\n  if (getDOTCodes.includes(props.dataViewFactory.DOTCode) && !alreadyExistsInFavs) {\n    setIsAddedToFavs(true);\n    setAlreadyExistsInFavs(true);\n  } ///// END-get-keys-to-check-if-it-is-already-added /////\n\n\n  const HandleCloseModal = () => {\n    props.onCloseModal();\n  };\n\n  const addToFavsHandler = () => {\n    console.log(props.dataViewFactory);\n    sendRequest({\n      savedData: props.dataViewFactory,\n      id: props.dataViewFactory.DOTCode,\n      category: \"factory\",\n      username: userName\n    });\n    setIsAddedToFavs(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.modalWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-to-favs-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, !isAddedToFavs && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToFavsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Add to favs\"), isAddedToFavs && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.alreadyAdded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Already Added\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.factoryInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Name: \", props.dataViewFactory.Name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Country: \", props.dataViewFactory.Country), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"City: \", props.dataViewFactory.City), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Address: \", props.dataViewFactory.Address), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Postal Code: \", props.dataViewFactory.PostalCode), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"DOT Code: \", props.dataViewFactory.DOTCode), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Factory status: \", props.dataViewFactory.Status)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"close-factory-btn\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: HandleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default ViewFactory;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/components/Database/ViewFactory.js"],"names":["React","useState","useEffect","Modal","styles","useHttp","addToFavs","getDataInFavs","useContext","AuthContext","ViewFactory","props","isAddedToFavs","setIsAddedToFavs","alreadyExistsInFavs","setAlreadyExistsInFavs","sendRequest","status","error","authCtx","userName","email","replace","split","join","getKeys","getStatus","getError","data","loadedFavs","dataViewFactory","username","category","console","log","getDOTCodes","Object","keys","includes","DOTCode","HandleCloseModal","onCloseModal","addToFavsHandler","savedData","id","modalWindow","alreadyAdded","factoryInfo","Name","Country","City","Address","PostalCode","Status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport styles from \"./ViewFactory.module.css\";\r\nimport useHttp from \"./../../hooks/use-http\";\r\nimport { addToFavs, getDataInFavs } from \"../../lib/api\";\r\nimport { useContext } from \"react/cjs/react.development\";\r\nimport AuthContext from \"../../hooks/auth-context\";\r\n\r\nconst ViewFactory = (props) => {\r\n  const [isAddedToFavs, setIsAddedToFavs] = useState(false);\r\n  const [alreadyExistsInFavs, setAlreadyExistsInFavs] = useState(false);\r\n  const { sendRequest, status, error } = useHttp(addToFavs);\r\n  const authCtx = useContext(AuthContext);\r\n  const userName = authCtx.email?.replace(\"@\", \"_\").split(\".\").join(\"\");\r\n\r\n  ///// get-keys-to-check-if-it-is-already-added /////\r\n  const {\r\n    sendRequest: getKeys,\r\n    status: getStatus,\r\n    error: getError,\r\n    data: loadedFavs,\r\n  } = useHttp(getDataInFavs, true);\r\n\r\n  useEffect(() => {\r\n    if (props.dataViewFactory) {\r\n      getKeys({ username: userName, category: \"factory\" });\r\n      console.log(\"sent\", getStatus);\r\n    }\r\n  }, [getKeys]);\r\n\r\n  let getDOTCodes = [];\r\n  if (getStatus === \"pending\") {\r\n    console.log(\"pending\");\r\n  }\r\n  if (getError) {\r\n    return <div className=\"centered focused\">{getError}</div>;\r\n  }\r\n  if (getStatus === \"completed\" && loadedFavs) {\r\n    getDOTCodes = Object.keys(loadedFavs);\r\n  }\r\n\r\n  if (getStatus === \"completed\" && !loadedFavs) {\r\n    return null;\r\n  }\r\n  if (\r\n    getDOTCodes.includes(props.dataViewFactory.DOTCode) &&\r\n    !alreadyExistsInFavs\r\n  ) {\r\n    setIsAddedToFavs(true);\r\n    setAlreadyExistsInFavs(true);\r\n  }\r\n  ///// END-get-keys-to-check-if-it-is-already-added /////\r\n\r\n  const HandleCloseModal = () => {\r\n    props.onCloseModal();\r\n  };\r\n  const addToFavsHandler = () => {\r\n    console.log(props.dataViewFactory);\r\n    sendRequest({\r\n      savedData: props.dataViewFactory,\r\n      id: props.dataViewFactory.DOTCode,\r\n      category: \"factory\",\r\n      username: userName,\r\n    });\r\n    setIsAddedToFavs(true);\r\n  };\r\n  return (\r\n    <Modal>\r\n      {\" \"}\r\n      <div className={styles.modalWindow}>\r\n        <div className=\"add-to-favs-btn\">\r\n          {!isAddedToFavs && (\r\n            <button onClick={addToFavsHandler}>Add to favs</button>\r\n          )}\r\n          {isAddedToFavs && (\r\n            <div className={styles.alreadyAdded}>Already Added</div>\r\n          )}\r\n        </div>\r\n        <div className={styles.factoryInfo}>\r\n          <div>Name: {props.dataViewFactory.Name}</div>\r\n          <div>Country: {props.dataViewFactory.Country}</div>\r\n          <div>City: {props.dataViewFactory.City}</div>\r\n          <div>Address: {props.dataViewFactory.Address}</div>\r\n          <div>Postal Code: {props.dataViewFactory.PostalCode}</div>\r\n          <div>DOT Code: {props.dataViewFactory.DOTCode}</div>\r\n          <div>Factory status: {props.dataViewFactory.Status}</div>\r\n        </div>\r\n        <div className={styles[\"close-factory-btn\"]}>\r\n          <button onClick={HandleCloseModal}>Close</button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nexport default ViewFactory;\r\n"]},"metadata":{},"sourceType":"module"}