{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\hooks\\\\auth-context.js\";\nimport React, { useState } from \"react\";\nconst AuthContext = React.createContext({\n  email: \"\",\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = prpos => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const initialEmail = localStorage.getItem(\"email\");\n  const [email, setEmail] = useState(initialEmail);\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token, email) => {\n    setToken(token);\n    setEmail(email);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"email\", email);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    setEmail(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"email\");\n  };\n\n  const contextValue = {\n    email: email,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, prpos.children);\n};\nexport default AuthContext;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/hooks/auth-context.js"],"names":["React","useState","AuthContext","createContext","email","token","isLoggedIn","login","logout","AuthContextProvider","prpos","initialToken","localStorage","getItem","setToken","initialEmail","setEmail","userIsLoggedIn","loginHandler","setItem","logoutHandler","removeItem","contextValue","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,KAAK,EAAE,EAF+B;AAGtCC,EAAAA,UAAU,EAAE,KAH0B;AAItCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAJkB;AAKtCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AALsB,CAApB,CAApB;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBb,QAAQ,CAACU,YAAD,CAAlC;AACA,QAAMI,YAAY,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACT,KAAD,EAAQY,QAAR,IAAoBf,QAAQ,CAACc,YAAD,CAAlC;AACA,QAAME,cAAc,GAAG,CAAC,CAACZ,KAAzB;;AAEA,QAAMa,YAAY,GAAG,CAACb,KAAD,EAAQD,KAAR,KAAkB;AACrCU,IAAAA,QAAQ,CAACT,KAAD,CAAR;AACAW,IAAAA,QAAQ,CAACZ,KAAD,CAAR;AACAQ,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8Bd,KAA9B;AACAO,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8Bf,KAA9B;AACD,GALD;;AAOA,QAAMgB,aAAa,GAAG,MAAM;AAC1BN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,IAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACD,GALD;;AAOA,QAAMC,YAAY,GAAG;AACnBlB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,KAAK,EAAEA,KAFY;AAGnBC,IAAAA,UAAU,EAAEW,cAHO;AAInBV,IAAAA,KAAK,EAAEW,YAJY;AAKnBV,IAAAA,MAAM,EAAEY;AALW,GAArB;AAQA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAACa,QADT,CADF;AAKD,CAlCM;AAoCP,eAAerB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  email: \"\",\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (prpos) => {\r\n  const initialToken = localStorage.getItem(\"token\");\r\n  const [token, setToken] = useState(initialToken);\r\n  const initialEmail = localStorage.getItem(\"email\");\r\n  const [email, setEmail] = useState(initialEmail);\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token, email) => {\r\n    setToken(token);\r\n    setEmail(email);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"email\", email);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    setEmail(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"email\");\r\n  };\r\n\r\n  const contextValue = {\r\n    email: email,\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {prpos.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}