{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\components\\\\Database\\\\ViewFactory.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport styles from \"./ViewFactory.module.css\";\nimport useHttp from \"./../../hooks/use-http\";\nimport { addToFavs, getDataInFavs } from \"../../lib/api\";\n\nconst ViewFactory = props => {\n  const [isAddedToFavs, setIsAddedToFavs] = useState(false);\n  const [alreadyExistsInFavs, setAlreadyExistsInFavs] = useState(false);\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addToFavs); ///////////// get-keys ////////////////////\n\n  const {\n    sendRequest: getKeys,\n    status: getStatus,\n    error: getError,\n    data: loadedFavs\n  } = useHttp(getDataInFavs, true);\n  useEffect(() => {\n    if (props.dataViewFactory) {\n      getKeys(\"factory\");\n      console.log(\"sent\", getStatus);\n    }\n  }, [getKeys]);\n  let getDOTCodes = [];\n\n  if (getStatus === \"pending\") {\n    console.log(\"pending\");\n  }\n\n  if (getError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, getError);\n  }\n\n  if (getStatus === \"completed\" && loadedFavs) {\n    getDOTCodes = Object.keys(loadedFavs);\n  }\n\n  if (getStatus === \"completed\" && !loadedFavs) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"No favs found!\");\n  }\n\n  if (getDOTCodes.includes(props.dataViewFactory.DOTCode) && !alreadyExistsInFavs) {\n    setIsAddedToFavs(true);\n    setAlreadyExistsInFavs(true);\n  } ///////////// END-get-keys ////////////////////\n\n\n  const HandleCloseModal = () => {\n    props.onCloseModal();\n  };\n\n  const addToFavsHandler = () => {\n    console.log(props.dataViewFactory);\n    sendRequest({\n      savedData: props.dataViewFactory,\n      id: props.dataViewFactory.DOTCode,\n      category: \"factory\"\n    });\n    setIsAddedToFavs(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.modalWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, !isAddedToFavs && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToFavsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Add to favs\"), isAddedToFavs && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 27\n    }\n  }, \"Already Added\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.factoryInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.Name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.Country), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.City), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.Address), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.PostalCode), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.DOTCode), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, props.dataViewFactory.Status)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: HandleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n};\n\nexport default ViewFactory;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/components/Database/ViewFactory.js"],"names":["React","useState","useEffect","Modal","styles","useHttp","addToFavs","getDataInFavs","ViewFactory","props","isAddedToFavs","setIsAddedToFavs","alreadyExistsInFavs","setAlreadyExistsInFavs","sendRequest","status","error","getKeys","getStatus","getError","data","loadedFavs","dataViewFactory","console","log","getDOTCodes","Object","keys","includes","DOTCode","HandleCloseModal","onCloseModal","addToFavsHandler","savedData","id","category","modalWindow","factoryInfo","Name","Country","City","Address","PostalCode","Status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport styles from \"./ViewFactory.module.css\";\r\nimport useHttp from \"./../../hooks/use-http\";\r\nimport { addToFavs, getDataInFavs } from \"../../lib/api\";\r\n\r\nconst ViewFactory = (props) => {\r\n  const [isAddedToFavs, setIsAddedToFavs] = useState(false);\r\n  const [alreadyExistsInFavs, setAlreadyExistsInFavs] = useState(false);\r\n  const { sendRequest, status, error } = useHttp(addToFavs);\r\n\r\n  ///////////// get-keys ////////////////////\r\n  const {\r\n    sendRequest: getKeys,\r\n    status: getStatus,\r\n    error: getError,\r\n    data: loadedFavs,\r\n  } = useHttp(getDataInFavs, true);\r\n\r\n  useEffect(() => {\r\n    if (props.dataViewFactory) {\r\n      getKeys(\"factory\");\r\n      console.log(\"sent\", getStatus);\r\n    }\r\n  }, [getKeys]);\r\n\r\n  let getDOTCodes = [];\r\n  if (getStatus === \"pending\") {\r\n    console.log(\"pending\");\r\n  }\r\n  if (getError) {\r\n    return <div className=\"centered focused\">{getError}</div>;\r\n  }\r\n  if (getStatus === \"completed\" && loadedFavs) {\r\n    getDOTCodes = Object.keys(loadedFavs);\r\n  }\r\n\r\n  if (getStatus === \"completed\" && !loadedFavs) {\r\n    return <div className=\"centered focused\">No favs found!</div>;\r\n  }\r\n  if (\r\n    getDOTCodes.includes(props.dataViewFactory.DOTCode) &&\r\n    !alreadyExistsInFavs\r\n  ) {\r\n    setIsAddedToFavs(true);\r\n    setAlreadyExistsInFavs(true);\r\n  }\r\n  ///////////// END-get-keys ////////////////////\r\n\r\n  const HandleCloseModal = () => {\r\n    props.onCloseModal();\r\n  };\r\n  const addToFavsHandler = () => {\r\n    console.log(props.dataViewFactory);\r\n    sendRequest({\r\n      savedData: props.dataViewFactory,\r\n      id: props.dataViewFactory.DOTCode,\r\n      category: \"factory\",\r\n    });\r\n    setIsAddedToFavs(true);\r\n  };\r\n  return (\r\n    <Modal>\r\n      {\" \"}\r\n      <div className={styles.modalWindow}>\r\n        {!isAddedToFavs && (\r\n          <button onClick={addToFavsHandler}>Add to favs</button>\r\n        )}\r\n        {isAddedToFavs && <div>Already Added</div>}\r\n        <div className={styles.factoryInfo}>\r\n          <div>{props.dataViewFactory.Name}</div>\r\n          <div>{props.dataViewFactory.Country}</div>\r\n          <div>{props.dataViewFactory.City}</div>\r\n          <div>{props.dataViewFactory.Address}</div>\r\n          <div>{props.dataViewFactory.PostalCode}</div>\r\n          <div>{props.dataViewFactory.DOTCode}</div>\r\n          <div>{props.dataViewFactory.Status}</div>\r\n        </div>\r\n        <button onClick={HandleCloseModal}>Close</button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nexport default ViewFactory;\r\n"]},"metadata":{},"sourceType":"module"}