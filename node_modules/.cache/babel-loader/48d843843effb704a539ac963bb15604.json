{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\pages\\\\Home.js\";\nimport React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport AuthContext from \"../hooks/auth-context\";\n\nconst Home = () => {\n  var _authCtx$email;\n\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  const userName = (_authCtx$email = authCtx.email) === null || _authCtx$email === void 0 ? void 0 : _authCtx$email.replace(\"@\", \"_\").split(\".\").join(\"\");\n  console.log(userName);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, userName);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isLoggedIn && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"This project is a simple simulation of database website. The main scope was to get the certain data from the database API depending on user's selected options. The responsiveness of the website was not taken into consideration.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"These are the features that I was focused on:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Show data from database API depending on selected options.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"Filter the data.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Sort the data.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Search items.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Add items to the favourites.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Login / Sign in.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Show different information and features depending on whether the user is logged in or not.\"))), \" \"), isLoggedIn && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-logged\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Make a search in\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"go-to-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/database\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Database\")), \" \", \"section.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Check list of your favs in\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"go-to-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Favourite\")), \" \", \"section.\")));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/pages/Home.js"],"names":["React","useContext","useState","NavLink","AuthContext","Home","authCtx","isLoggedIn","userName","email","replace","split","join","console","log","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGL,UAAU,CAACG,WAAD,CAA1B;AACA,QAAMG,UAAU,GAAGD,OAAO,CAACC,UAA3B;AACA,QAAMC,QAAQ,qBAAGF,OAAO,CAACG,KAAX,mDAAG,eAAeC,OAAf,CAAuB,GAAvB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,GAAvC,EAA4CC,IAA5C,CAAiD,EAAjD,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,MAAIO,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,QAAJ,CAAd;AAEA,sBACE,0CACG,CAACD,UAAD,iBACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2OADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGATF,CAFF,CAPF,EAuBS,GAvBT,CAFJ,EA4BGA,UAAU,iBACT;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmB,GADnB,eAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,EAIU,GAJV,aADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC6B,GAD7B,eAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFF,EAIU,GAJV,aARF,CA7BJ,CADF;AAiDD,CAzDD;;AA2DA,eAAeF,IAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AuthContext from \"../hooks/auth-context\";\r\n\r\nconst Home = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const userName = authCtx.email?.replace(\"@\", \"_\").split(\".\").join(\"\");\r\n  console.log(userName);\r\n\r\n  let content = <p>{userName}</p>;\r\n\r\n  return (\r\n    <>\r\n      {!isLoggedIn && (\r\n        <div className=\"description\">\r\n          <h3>\r\n            This project is a simple simulation of database website. The main\r\n            scope was to get the certain data from the database API depending on\r\n            user's selected options. The responsiveness of the website was not\r\n            taken into consideration.\r\n          </h3>\r\n          <div>\r\n            <h4>These are the features that I was focused on:</h4>\r\n            <ul>\r\n              <li>\r\n                Show data from database API depending on selected options.\r\n              </li>\r\n              <li>Filter the data.</li>\r\n              <li>Sort the data.</li>\r\n              <li>Search items.</li>\r\n              <li>Add items to the favourites.</li>\r\n              <li>Login / Sign in.</li>\r\n              <li>\r\n                Show different information and features depending on whether the\r\n                user is logged in or not.\r\n              </li>\r\n            </ul>\r\n          </div>{\" \"}\r\n        </div>\r\n      )}\r\n      {isLoggedIn && (\r\n        <div className=\"home-logged\">\r\n          <div>\r\n            Make a search in{\" \"}\r\n            <span className=\"go-to-profile\">\r\n              <NavLink to=\"/database\">Database</NavLink>\r\n            </span>{\" \"}\r\n            section.\r\n          </div>\r\n          <div>\r\n            Check list of your favs in{\" \"}\r\n            <span className=\"go-to-profile\">\r\n              <NavLink to=\"/favourite\">Favourite</NavLink>\r\n            </span>{\" \"}\r\n            section.\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}