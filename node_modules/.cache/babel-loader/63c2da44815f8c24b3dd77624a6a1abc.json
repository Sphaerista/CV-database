{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\components\\\\Database\\\\FactoryItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./FactoryItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport useHttp from \"./../../hooks/use-http\";\nimport { getDataInFavs } from \"../../lib/api\";\n\nconst FactoryItem = props => {\n  const [isAddedToFavs, setIsAddedToFavs] = useState(false);\n  const [alreadyExistsInFavs, setAlreadyExistsInFavs] = useState(false);\n\n  const addToFavsHandler = e => {\n    e.preventDefault();\n    console.log(props.DOTCode);\n  };\n\n  const HandleOpenModal = () => {\n    props.onOpenModal();\n    const specificFactory = props;\n    props.onViewFactory(specificFactory);\n  }; ///////////// get-keys ////////////////////\n\n\n  const {\n    sendRequest: getKeys,\n    status: getStatus,\n    error: getError,\n    data: loadedFavs\n  } = useHttp(getDataInFavs, true);\n  useEffect(() => {\n    if (props.DOTCode) {\n      getKeys();\n      console.log(\"sent\", getStatus);\n    }\n  }, [getKeys]);\n  let getDOTCodes = [];\n\n  if (getStatus === \"pending\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"pending\");\n  }\n\n  if (getError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, getError);\n  }\n\n  if (getStatus === \"completed\" && loadedFavs) {\n    getDOTCodes = Object.keys(loadedFavs);\n  }\n\n  if (getStatus === \"completed\" && !loadedFavs) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, \"No favs found!\");\n  }\n\n  if (getDOTCodes.includes(props.DOTCode) && !alreadyExistsInFavs) {\n    console.log(getDOTCodes);\n    setIsAddedToFavs(true);\n    setAlreadyExistsInFavs(true);\n  } ///////////// END-get-keys ////////////////////\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"factory-item\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"add-to-favs-btn\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, !isAddedToFavs && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToFavsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Add to favs\"), isAddedToFavs && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }, \"Already Added\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"factory-name\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, props.Name), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"factory-location\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"factory-country\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, props.Country, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"factory-city\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.City)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"view-factory-btn\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: HandleOpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"View factory\")));\n};\n\nexport default FactoryItem;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/components/Database/FactoryItem.js"],"names":["React","useEffect","useState","styles","NavLink","useHttp","getDataInFavs","FactoryItem","props","isAddedToFavs","setIsAddedToFavs","alreadyExistsInFavs","setAlreadyExistsInFavs","addToFavsHandler","e","preventDefault","console","log","DOTCode","HandleOpenModal","onOpenModal","specificFactory","onViewFactory","sendRequest","getKeys","status","getStatus","error","getError","data","loadedFavs","getDOTCodes","Object","keys","includes","Name","Country","City"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport styles from \"./FactoryItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useHttp from \"./../../hooks/use-http\";\r\nimport { getDataInFavs } from \"../../lib/api\";\r\n\r\nconst FactoryItem = (props) => {\r\n  const [isAddedToFavs, setIsAddedToFavs] = useState(false);\r\n  const [alreadyExistsInFavs, setAlreadyExistsInFavs] = useState(false);\r\n\r\n  const addToFavsHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(props.DOTCode);\r\n  };\r\n  const HandleOpenModal = () => {\r\n    props.onOpenModal();\r\n    const specificFactory = props;\r\n    props.onViewFactory(specificFactory);\r\n  };\r\n\r\n  ///////////// get-keys ////////////////////\r\n  const {\r\n    sendRequest: getKeys,\r\n    status: getStatus,\r\n    error: getError,\r\n    data: loadedFavs,\r\n  } = useHttp(getDataInFavs, true);\r\n\r\n  useEffect(() => {\r\n    if (props.DOTCode) {\r\n      getKeys();\r\n      console.log(\"sent\", getStatus);\r\n    }\r\n  }, [getKeys]);\r\n\r\n  let getDOTCodes = [];\r\n  if (getStatus === \"pending\") {\r\n    return <div>pending</div>;\r\n  }\r\n  if (getError) {\r\n    return <div className=\"centered focused\">{getError}</div>;\r\n  }\r\n  if (getStatus === \"completed\" && loadedFavs) {\r\n    getDOTCodes = Object.keys(loadedFavs);\r\n  }\r\n\r\n  if (getStatus === \"completed\" && !loadedFavs) {\r\n    return <div className=\"centered focused\">No favs found!</div>;\r\n  }\r\n  if (getDOTCodes.includes(props.DOTCode) && !alreadyExistsInFavs) {\r\n    console.log(getDOTCodes);\r\n    setIsAddedToFavs(true);\r\n    setAlreadyExistsInFavs(true);\r\n  }\r\n  ///////////// END-get-keys ////////////////////\r\n\r\n  return (\r\n    <div className={styles[\"factory-item\"]}>\r\n      <div className={styles[\"add-to-favs-btn\"]}>\r\n        {!isAddedToFavs && (\r\n          <button onClick={addToFavsHandler}>Add to favs</button>\r\n        )}\r\n        {isAddedToFavs && <div>Already Added</div>}\r\n      </div>\r\n      <div className={styles[\"factory-name\"]}>{props.Name}</div>\r\n      <div className={styles[\"factory-location\"]}>\r\n        <span className={styles[\"factory-country\"]}>{props.Country} </span>\r\n        <span className={styles[\"factory-city\"]}>{props.City}</span>\r\n      </div>\r\n      <div className={styles[\"view-factory-btn\"]}>\r\n        <button onClick={HandleOpenModal}>View factory</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FactoryItem;\r\n"]},"metadata":{},"sourceType":"module"}