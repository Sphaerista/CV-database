{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\components\\\\AuthForm\\\\AuthForm.js\";\nimport styles from \"./AuthForm.module.css\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../hooks/auth-context\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const switcherHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const emailHandler = e => {\n    e.preventDefault();\n    setEmailInput(e.target.value);\n  };\n\n  const passwordHandler = e => {\n    e.preventDefault();\n    setPasswordInput(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInput;\n    const enteredPassword = passwordInput; ////////////// fetch to firebase ///////////////\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBMWCpUYLcen4QF4tC8puh4UnkbgzL0cyM\";\n    } else {\n      url = \"identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBMWCpUYLcen4QF4tC8puh4UnkbgzL0cyM\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Auth failed\";\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken, data.email);\n      history.push(\"/home\");\n      console.log(data);\n    }).catch(error => {\n      alert(error.message);\n    });\n    setEmailInput(\"\");\n    setPasswordInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, isLogin ? \"Login\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: emailHandler,\n    type: \"email\",\n    id: \"email\",\n    value: emailInput,\n    required: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: passwordHandler,\n    type: \"password\",\n    id: \"password\",\n    value: passwordInput,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, isLogin ? \"Login\" : \"Create account\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.toggle,\n    type: \"button\",\n    onClick: switcherHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, isLogin ? \"Create new account\" : \"Login with account\"))));\n};\n\nexport default AuthForm;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/components/AuthForm/AuthForm.js"],"names":["styles","React","useContext","useState","useHistory","AuthContext","AuthForm","isLogin","setIsLogin","emailInput","setEmailInput","passwordInput","setPasswordInput","isLoading","setIsLoading","authCtx","history","switcherHandler","prevState","emailHandler","e","preventDefault","target","value","passwordHandler","submitHandler","enteredEmail","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","login","idToken","push","console","log","catch","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import styles from \"./AuthForm.module.css\";\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../hooks/auth-context\";\r\n\r\nconst AuthForm = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const switcherHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    e.preventDefault();\r\n    setEmailInput(e.target.value);\r\n  };\r\n  const passwordHandler = (e) => {\r\n    e.preventDefault();\r\n    setPasswordInput(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredEmail = emailInput;\r\n    const enteredPassword = passwordInput;\r\n    ////////////// fetch to firebase ///////////////\r\n    setIsLoading(true);\r\n    let url;\r\n    if (isLogin) {\r\n      url =\r\n        \"identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBMWCpUYLcen4QF4tC8puh4UnkbgzL0cyM\";\r\n    } else {\r\n      url =\r\n        \"identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBMWCpUYLcen4QF4tC8puh4UnkbgzL0cyM\";\r\n    }\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Auth failed\";\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            throw new Error(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken, data.email);\r\n        history.push(\"/home\");\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    setEmailInput(\"\");\r\n    setPasswordInput(\"\");\r\n  };\r\n  return (\r\n    <section className={styles.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={styles.control}>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            onChange={emailHandler}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={emailInput}\r\n            required\r\n            autoFocus\r\n          />\r\n        </div>\r\n        <div className={styles.control}>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            onChange={passwordHandler}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={passwordInput}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create account\"}</button>\r\n          <button\r\n            className={styles.toggle}\r\n            type=\"button\"\r\n            onClick={switcherHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}