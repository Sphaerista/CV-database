{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\14-react-portfolio-api\\\\src\\\\pages\\\\Favourite.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./Favourite.module.css\";\nimport { getDataInFavs } from \"../lib/api\";\nimport useHttp from \"./../hooks/use-http\";\nimport FavouriteFactoryList from \"../components/Favourite/FavouriteFactoryList\";\nimport Checkbox from \"../components/UI/Checkbox\";\nimport FavouriteCarList from \"../components/Favourite/FavouriteCarList\";\nimport { useContext } from \"react/cjs/react.development\";\nimport AuthContext from \"../hooks/auth-context\";\n\nconst Favourite = () => {\n  var _authCtx$email;\n\n  const authCtx = useContext(AuthContext);\n  const userName = (_authCtx$email = authCtx.email) === null || _authCtx$email === void 0 ? void 0 : _authCtx$email.replace(\"@\", \"_\").split(\".\").join(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [isCarFavs, setIsCarFavs] = useState(true);\n  const [refreshFavsPage, setRefreshFavsPage] = useState(false);\n\n  const refreshFavsHandler = () => {\n    setRefreshFavsPage(() => !refreshFavsPage);\n  };\n\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedFavs\n  } = useHttp(getDataInFavs, true);\n  useEffect(() => {\n    if (isCarFavs) {\n      sendRequest({\n        username: userName,\n        category: \"vehicle\"\n      });\n    } else {\n      sendRequest({\n        username: userName,\n        category: \"factory\"\n      });\n    }\n  }, [sendRequest, refreshFavsPage, isCarFavs]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"pending\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  let noDataContent;\n\n  if (status === \"completed\" && !loadedFavs || loadedFavs.length === 0) {\n    return noDataContent = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered focused\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, \"No favs found!\");\n  }\n\n  const firstIteration = Object.entries(loadedFavs);\n  let secondItem = [];\n  firstIteration.forEach(element => {\n    const test = Object.entries(element[1]);\n    secondItem.push(test[0][1]);\n  }); // console.log(Object.keys(loadedFavs));\n  // console.log(firstIteration, secondItem[0][1]);\n  ////////////// checkbox-handler ////////////\n\n  const searchtypeHandler = e => {\n    if (e.target.htmlFor === \"car-search\") {\n      setIsCarFavs(true);\n    }\n\n    if (e.target.htmlFor === \"factory-search\") {\n      setIsCarFavs(false);\n    }\n  }; ////////////// END-checkbox-handler ////////////\n  ////////////// search /////////////\n\n\n  const searchHandler = e => {\n    setTimeout(() => {\n      setSearchInput(e.target.value);\n    }, 200);\n  };\n\n  console.log(secondItem);\n  let filteredInput;\n\n  if (isCarFavs) {\n    filteredInput = secondItem === null || secondItem === void 0 ? void 0 : secondItem.filter(car => {\n      var _car$Model_Name, _car$Make_Name;\n\n      return ((_car$Model_Name = car.Model_Name) === null || _car$Model_Name === void 0 ? void 0 : _car$Model_Name.toLowerCase().includes(searchInput.toLowerCase())) || ((_car$Make_Name = car.Make_Name) === null || _car$Make_Name === void 0 ? void 0 : _car$Make_Name.toLowerCase().includes(searchInput.toLowerCase()));\n    });\n  }\n\n  if (!isCarFavs) {\n    console.log(secondItem);\n    filteredInput = secondItem === null || secondItem === void 0 ? void 0 : secondItem.filter(country => {\n      var _country$Country, _country$City, _country$Name, _country$Status;\n\n      return ((_country$Country = country.Country) === null || _country$Country === void 0 ? void 0 : _country$Country.toLowerCase().includes(searchInput.toLowerCase())) || ((_country$City = country.City) === null || _country$City === void 0 ? void 0 : _country$City.toLowerCase().includes(searchInput.toLowerCase())) || ((_country$Name = country.Name) === null || _country$Name === void 0 ? void 0 : _country$Name.toLowerCase().includes(searchInput.toLowerCase())) || ((_country$Status = country.Status) === null || _country$Status === void 0 ? void 0 : _country$Status.toLowerCase().includes(searchInput.toLowerCase()));\n    });\n  }\n\n  console.log(secondItem, filteredInput); ////////////// END-search /////////////\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name1: \"Car Favs\",\n    name2: \"Factory Favs\",\n    onSearchtypeHandler: searchtypeHandler,\n    whoIsChecked: isCarFavs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    onChange: searchHandler,\n    placeholder: \"Search the car model...\",\n    maxLength: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), isCarFavs && /*#__PURE__*/React.createElement(FavouriteCarList, {\n    favs: filteredInput,\n    onRefreshFavsHandler: refreshFavsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), !isCarFavs && /*#__PURE__*/React.createElement(FavouriteFactoryList, {\n    favs: filteredInput,\n    onRefreshFavsHandler: refreshFavsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), noDataContent && noDataContent);\n};\n\nexport default Favourite;","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/14-react-portfolio-api/src/pages/Favourite.js"],"names":["React","useEffect","useState","styles","getDataInFavs","useHttp","FavouriteFactoryList","Checkbox","FavouriteCarList","useContext","AuthContext","Favourite","authCtx","userName","email","replace","split","join","searchInput","setSearchInput","isCarFavs","setIsCarFavs","refreshFavsPage","setRefreshFavsPage","refreshFavsHandler","sendRequest","status","error","data","loadedFavs","username","category","noDataContent","length","firstIteration","Object","entries","secondItem","forEach","element","test","push","searchtypeHandler","e","target","htmlFor","searchHandler","setTimeout","value","console","log","filteredInput","filter","car","Model_Name","toLowerCase","includes","Make_Name","country","Country","City","Name","Status","forSearch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport styles from \"./Favourite.module.css\";\r\nimport { getDataInFavs } from \"../lib/api\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport FavouriteFactoryList from \"../components/Favourite/FavouriteFactoryList\";\r\nimport Checkbox from \"../components/UI/Checkbox\";\r\nimport FavouriteCarList from \"../components/Favourite/FavouriteCarList\";\r\nimport { useContext } from \"react/cjs/react.development\";\r\nimport AuthContext from \"../hooks/auth-context\";\r\n\r\nconst Favourite = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const userName = authCtx.email?.replace(\"@\", \"_\").split(\".\").join(\"\");\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isCarFavs, setIsCarFavs] = useState(true);\r\n  const [refreshFavsPage, setRefreshFavsPage] = useState(false);\r\n  const refreshFavsHandler = () => {\r\n    setRefreshFavsPage(() => !refreshFavsPage);\r\n  };\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    error,\r\n    data: loadedFavs,\r\n  } = useHttp(getDataInFavs, true);\r\n\r\n  useEffect(() => {\r\n    if (isCarFavs) {\r\n      sendRequest({ username: userName, category: \"vehicle\" });\r\n    } else {\r\n      sendRequest({ username: userName, category: \"factory\" });\r\n    }\r\n  }, [sendRequest, refreshFavsPage, isCarFavs]);\r\n\r\n  if (status === \"pending\") {\r\n    return <div>pending</div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"centered focused\">{error}</div>;\r\n  }\r\n  let noDataContent;\r\n  if ((status === \"completed\" && !loadedFavs) || loadedFavs.length === 0) {\r\n    return (noDataContent = (\r\n      <div className=\"centered focused\">No favs found!</div>\r\n    ));\r\n  }\r\n\r\n  const firstIteration = Object.entries(loadedFavs);\r\n  let secondItem = [];\r\n  firstIteration.forEach((element) => {\r\n    const test = Object.entries(element[1]);\r\n    secondItem.push(test[0][1]);\r\n  });\r\n\r\n  // console.log(Object.keys(loadedFavs));\r\n  // console.log(firstIteration, secondItem[0][1]);\r\n\r\n  ////////////// checkbox-handler ////////////\r\n  const searchtypeHandler = (e) => {\r\n    if (e.target.htmlFor === \"car-search\") {\r\n      setIsCarFavs(true);\r\n    }\r\n    if (e.target.htmlFor === \"factory-search\") {\r\n      setIsCarFavs(false);\r\n    }\r\n  };\r\n  ////////////// END-checkbox-handler ////////////\r\n\r\n  ////////////// search /////////////\r\n  const searchHandler = (e) => {\r\n    setTimeout(() => {\r\n      setSearchInput(e.target.value);\r\n    }, 200);\r\n  };\r\n  console.log(secondItem);\r\n  let filteredInput;\r\n  if (isCarFavs) {\r\n    filteredInput = secondItem?.filter((car) => {\r\n      return (\r\n        car.Model_Name?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        car.Make_Name?.toLowerCase().includes(searchInput.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n  if (!isCarFavs) {\r\n    console.log(secondItem);\r\n    filteredInput = secondItem?.filter((country) => {\r\n      return (\r\n        country.Country?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        country.City?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        country.Name?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        country.Status?.toLowerCase().includes(searchInput.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n\r\n  console.log(secondItem, filteredInput);\r\n  ////////////// END-search /////////////\r\n  return (\r\n    <>\r\n      <div className={styles.forSearch}>\r\n        <div className=\"forCheckbox\">\r\n          <Checkbox\r\n            name1=\"Car Favs\"\r\n            name2=\"Factory Favs\"\r\n            onSearchtypeHandler={searchtypeHandler}\r\n            whoIsChecked={isCarFavs}\r\n          />\r\n        </div>\r\n\r\n        <input\r\n          type=\"search\"\r\n          onChange={searchHandler}\r\n          placeholder=\"Search the car model...\"\r\n          maxLength=\"15\"\r\n        />\r\n      </div>\r\n\r\n      {isCarFavs && (\r\n        <FavouriteCarList\r\n          favs={filteredInput}\r\n          onRefreshFavsHandler={refreshFavsHandler}\r\n        />\r\n      )}\r\n      {!isCarFavs && (\r\n        <FavouriteFactoryList\r\n          favs={filteredInput}\r\n          onRefreshFavsHandler={refreshFavsHandler}\r\n        />\r\n      )}\r\n      {noDataContent && noDataContent}\r\n    </>\r\n  );\r\n};\r\nexport default Favourite;\r\n"]},"metadata":{},"sourceType":"module"}